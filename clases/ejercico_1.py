# üß™ EJERCICIO 1 (para ti)
#Crea una clase llamada Coche.
#Que tenga los atributos: marca y a√±o.
#Que tenga un m√©todo mostrar_info que imprima:
#"Este coche es un [marca] del a√±o [a√±o]".
#Luego, crea un coche con los datos que t√∫ quieras y llama al m√©todo mostrar_info().



class Coche:
    def __init__(self, marca, a√±o):
        self.marca = marca
        self.a√±o = a√±o
        
    def mostrar_info(self):
        return f"Este coche es un {self.marca} del a√±o {self.a√±o}."
    
mi_coche = Coche ("Kia", 2025)
print(mi_coche.mostrar_info())

#üß† PASO 2: A√±adir comportamiento din√°mico
#Vamos a a√±adir: Un atributo nuevo llamado encendido, que ser√° False al principio.
#Un m√©todo arrancar() que cambie encendido a True.
#Un m√©todo detener() que cambie encendido a False.
#Un m√©todo estado() que diga si el coche est√° encendido o apagado.

class Coche1:
    def __init__(self, marca, a√±o, encendido=False):
        self.marca = marca
        self.a√±o = a√±o
        self.encendido = encendido
        
    def mostrar_info(self):
        return f"Este coche es un {self.marca} del a√±o {self.a√±o}."
    
    
    
    def arrancar(self):
        self.encendido = True
        return f"El coche {self.marca} ha arrancado."
    
    def detener(self):
        self.encendido = False
        return f"El coche {self.marca} se ha detenido."
    
    def estado(self):
        if self.encendido:
            return f"El coche {self.marca} est√° encendido."
        else:
            return f"El coche {self.marca} est√° apagado."
    
mi_coche = Coche ("Kia", 2025)
print(mi_coche.mostrar_info())

mi_coche1 = Coche1("Opel", 1997)
print(mi_coche1.mostrar_info())
print(mi_coche1.arrancar())
print(mi_coche1.estado())
print(mi_coche1.detener())
print(mi_coche1.estado())


#üß† PASO 3: A√±adir velocidad, acelerar y frenar
#Nuevos elementos:
#Atributo velocidad, que empieza en 0.
#M√©todo acelerar(cantidad) ‚Üí suma a la velocidad si el coche est√° encendido.
#M√©todo frenar(cantidad) ‚Üí resta a la velocidad sin bajar de 0.
#M√©todo mostrar_velocidad() ‚Üí muestra la velocidad actual.

class Coche2:
    
    def __init__(self, marca, a√±o, encendido = False, velocidad=0):
        self.marca = marca
        self.a√±o = a√±o
        self.encendido = encendido
        self.velocidad = velocidad
    
    def mostrar_info(self):
        return f"Este coche es un {self.marca} del a√±o {self.a√±o}."
    
       
    def arrancar(self):
        self.encendido = True
        return f"El coche {self.marca} ha arrancado."
    
    def detener(self):
        self.encendido = False
        return f"El coche {self.marca} se ha detenido."
    
    def estado(self):
        if self.encendido:
            return f"El coche {self.marca} est√° encendido."
        else:
            return f"El coche {self.marca} est√° apagado."
        
    def acelerar(self, cantidad):
        if self.encendido:
            self.velocidad += cantidad
            return f"El coche {self.marca} ha acelerado a {self.velocidad} km/h."
        else:
            self.velocidad = 0
            return f"El coche {self.marca} est√° apagado, no puede acelerar."
        
    def frenar(self,cantidad):
        if self.velocidad - cantidad < 0:
            self.velocidad = 0
        else:
            self.velocidad -= cantidad
        return f"El coche {self.marca} ha frenado a {self.velocidad} km/h."
        

    def mostrar_velocidad(self):
        return f"La velocidad actual del coche {self.marca} es {self.velocidad} km/h."
    
mi_coche3 = Coche2("Ford", 2020)
print(mi_coche3.mostrar_info())
print(mi_coche3.arrancar())
print(mi_coche3.acelerar(50))
print(mi_coche3.mostrar_velocidad())
print(mi_coche3.frenar(20))
print(mi_coche3.mostrar_velocidad())
